// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.2/containers/rust
{
  "name": "Rust",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      // Use the VARIANT arg to pick a Debian OS version: buster, bullseye
      // Use bullseye when on local on arm64/Apple Silicon.
      "VARIANT": "bullseye"
    }
  },
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "lldb.executable": "/usr/bin/lldb",
    // VS Code don't watch files under ./target
    "files.watcherExclude": {
      "**/target/**": true
    },
    "rust-analyzer.checkOnSave.command": "clippy"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "vadimcn.vscode-lldb",
    "mutantdino.resourcemonitor",
    "matklad.rust-analyzer",
    "tamasfe.even-better-toml",
    "serayuzgur.crates",
    "fermyon.autobindle",
    "golang.Go",
    "grain-lang.vscode-grain",
    "rust-lang.rust-analyzer"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'onCreateCommand' to run commands when the container is first created.
  // Here we download and install spin - this will be built into the Codespaces prebuild
  "onCreateCommand": "cd /usr/local/bin && sudo curl https://spin.fermyon.dev/downloads/install.sh | sudo bash",

  // Use 'postCreateCommand' to run commands after the container is created.
  // Here we install gopls in case you are using golang with spin
  "postCreateCommand": "go install -v golang.org/x/tools/gopls@latest",
 
  // Use 'postAttachCommand' to to run each time your client has successfully attached to the container
  // For Rust templates you need the wasm32-wasi target. You can add it using rustup:rustup target add wasm32-wasi.
  "postAttachCommand": "rustup target add wasm32-wasi",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode"
}
